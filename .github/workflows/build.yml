name: Build & Release App

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: 'windows-latest'
          - os: 'macos-13'
          - os: 'macos-latest'
    name: build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pillow pyinstaller
      - name: Create Executable
        run: |
          pyinstaller --windowed --name XJTUToolbox --collect-datas=fake_useragent --icon "assets/icons/main_icon.ico" --add-data "assets:assets" --add-data "ehall/templates:ehall/templates" app.py
      - name: Archive(windows)
        if: runner.os == 'Windows'
        run: |
          ls dist/
          powershell Compress-Archive ./dist/XJTUToolbox ./dist/XJTUToolbox-windows.zip
      - name: Upload Artifacts(windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: XJTUToolbox-windows.zip
          path: ./dist/XJTUToolbox-windows.zip
      - name: Archive(macOS)
        if: runner.os == 'macOS'
        run: |
          ls dist/
          arch=`uname -m`
          cd dist/ && zip XJTUToolbox-macOS-${arch}.zip -r XJTUToolbox.app/
      - name: Upload Artifacts(macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: XJTUToolbox-macOS-${{ runner.arch }}.zip
          path: ./dist/XJTUToolbox-macOS-*.zip
      - name: Cleanup Folder(windows)
        if: runner.os == 'Windows'
        run: |
          Get-ChildItem -Path "dist" -Exclude "XJTUToolbox-windows.zip" | Remove-Item -Force -Recurse
      - name: Cleanup Folder(macOS)
        if: runner.os == 'macOS'
        run: |
          shopt -s extglob
          rm -rf ./dist/!(XJTUToolbox-macOS-*.zip)
      - name: Prerelease app
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: XJTUToolbox ${{ github.ref_name }}
          prerelease: true
          files: "./dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}